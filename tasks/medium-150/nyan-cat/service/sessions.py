#!/usr/bin/env python3

import jwt
import logging

from Crypto.PublicKey import RSA


RSA_N = 16158503035655503650357438344334975980222051334857742016065172713762327569433945446598600705761456731844358980460949009747059779575245460547544076193224141560315438683650498045875098875194826053398028819192033784138396109321309878080919047169238085235290822926018152521443787945791354642779162369073575510464676307738745137368236340488336468229438062757591864495832519542800353637624510899960409953559448637052209587086542698189198304456374481505084668512138820151645511298243115434132458196567714649584872980882921433923431323025741438248940081524739535046106494564661952078162997692569171205852699326923237775905163
RSA_E = 65537
RSA_D = 9508903162734421918661753278697026391644778580518768578567610907604432417876298488471676051987459019745203362977210132580295932356966166851353165182173054420505752837516956194748995808774262727946072866774175915175633958652287380684907836675099641931572412038813831702618712631114250546722468343805494974393987927956721174408067169227555037701667116496596350446511636388597439427574340195858429359718502584121852401949424192902764435609758657503053949902120569024499867629972514035557867742482487281149112846167864871571280002510634217122947184603515841207729589816514294964411253215921357912183399011561952737476561

RSA_KEY = RSA.construct((RSA_N, RSA_E, RSA_D))
RSA_PUBLIC_KEY = RSA_KEY.publickey()

RSA_PUBLIC_TEXT = RSA_PUBLIC_KEY.exportKey()
RSA_PRIVATE_TEXT = RSA_KEY.exportKey()


def make_session_cookie(session):
    try:
        headers = {'modulus': RSA_N, 'exponent': RSA_E}
        return jwt.encode(session, RSA_PRIVATE_TEXT, algorithm='RS512', headers=headers)
    except Exception as e:
        logging.exception('make_session_cookie')
    return None


def read_session_cookie(cookie):
    try:
        return jwt.decode(cookie, RSA_PUBLIC_TEXT, 'RS512')
    except Exception as e:
        logging.exception('read_session_cookie')
    return None
